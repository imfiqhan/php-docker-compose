version: '3'

networks:
  change-it:


services:
  site:
    image: nginx
    container_name: ${STACK_NAME}-nginx
    user: ${UID:-1000}:${GID:-1000}
    restart: unless-stopped
    ports:
      - ${SITE_PORT}:80
      - ${SITE_SECURE_PORT}:443
    volumes:
      - ./src:/var/www/html
      - ./nginx/templates:/etc/nginx/templates
      - ./nginx/ssl/cert.pem:/etc/nginx/cert.pem
      - ./nginx/ssl/key.pem:/etc/nginx/key.pem
    cpus: 0.6
    mem_limit: 256m
    depends_on:
      - php
      - mysql
      - postgres
      - adminer
    networks:
      - ${STACK_NAME}

  mysql:
    image: mysql:5.7.29
    container_name: ${STACK_NAME}-mysql
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    user: ${UID:-1000}:${GID:-1000}
    environment:
      MYSQL_DATABASE: ${STACK_NAME}
      MYSQL_USER: root
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/var/lib/mysql
    cpus: 1.0
    mem_limit: 512m
    networks:
      - ${STACK_NAME}

  postgres:
    image: postgres
    container_name: ${STACK_NAME}-postgres
    restart: unless-stopped
    tty: true
    ports:
      - ${POSTGRES_PORT}:5432
    user: ${UID:-1000}:${GID:-1000}
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: root
      POSTGRES_DB: ${STACK_NAME}
    volumes:
      - ./postgresql:/var/lib/postgresql
    cpus: 1.0
    mem_limit: 512m
    networks:
      - ${STACK_NAME}

  php:
    build:
      context: .
      dockerfile: php.dockerfile
      args:
        - UID=${UID:-1000}
        - GID=${GID:-1000}
    container_name: ${STACK_NAME}-php
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    cpus: 1.0
    mem_limit: 128m
    networks:
      - ${STACK_NAME}

  adminer:
    image: adminer
    container_name: ${STACK_NAME}-adminer
    restart: unless-stopped
    ports:
      - ${ADMINER_PORT}:8080
    user: ${UID:-1000}:${GID:-1000}
    cpus: 0.2
    mem_limit: 50m
    networks:
      - ${STACK_NAME}
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: ${STACK_NAME}-mailhog
  #   restart: unless-stopped
  #   ports:
  #     - ${MAILHOG_PORT}:1025
  #     - ${MAILHOG_UI_PORT}:8025
  #   cpus: 0.6
  #   mem_limit: 64m
  #   networks:
  #     - ${STACK_NAME}
